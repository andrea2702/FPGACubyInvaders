---------------------------------------------------------
-- 						POR COMPLETAR							 --
---------------------------------------------------------


LIBRARY 	ieee;
USE		ieee.std_logic_1164.all, ieee.numeric_std.all;

ENTITY gumnut_controller IS
	PORT(	
		CLOCK_50	: 	IN			std_logic;
		KEY_IN		: 	IN 		std_logic_vector( 1 DOWNTO 0 );
		HEX0		:	OUT		std_logic_vector( 7 DOWNTO 0 );
		HEX5		:	OUT		std_logic_vector( 7 DOWNTO 0 );
		LEDR		: 	OUT		std_logic_vector( 9 DOWNTO 0 )
	);
END gumnut_controller;

ARCHITECTURE behavior OF gumnut_controller IS	
	
	component gumnut_with_mem IS
		generic ( 
			IMem_file_name : string := "gasm_text.dat";
			DMem_file_name : string := "gasm_data.dat";
         debug : boolean := false );
		port ( clk_i : in std_logic;
         rst_i : in std_logic;
         -- I/O port bus
         port_cyc_o : out std_logic;
         port_stb_o : out std_logic;
         port_we_o : out std_logic;
         port_ack_i : in std_logic;
         port_adr_o : out unsigned(7 downto 0);
         port_dat_o : out std_logic_vector(7 downto 0);
         port_dat_i : in std_logic_vector(7 downto 0);
         -- Interrupts
         int_req : in std_logic;
         int_ack : out std_logic );
	end COMPONENT gumnut_with_mem;
	
	
	COMPONENT hex_to_7seg IS
		PORT(data: IN STD_LOGIC_VECTOR(7 downto 0);
				seg: OUT STD_LOGIC_VECTOR(7 downto 0)
				);
	END COMPONENT;
	
	SIGNAL 	clk_i, rst_i, 
				port_cyc_o, port_stb_o, 
				port_we_o, port_ack_i, 
				int_req, int_ack			: 	std_logic;
	SIGNAL 	port_dat_o, port_dat_i	:	std_logic_vector( 7 downto 0 );
	SIGNAL   port_adr_o					:	unsigned( 7 DOWNTO 0 );
	
	SIGNAL hex_out	:	STD_LOGIC_VECTOR(7 downto 0);
	
BEGIN

	
	clk_i 		<= CLOCK_50;
	rst_i 		<= not KEY_IN( 0 );
	port_ack_i 	<= '1';
	
	gumnut	:	COMPONENT gumnut_with_mem 
						PORT MAP(
							clk_i, -- port_dat_o debe depender de esta seÃ±al
							rst_i,
							port_cyc_o,
							port_stb_o,
							port_we_o,
							port_ack_i,
							port_adr_o( 7 DOWNTO 0 ),
							port_dat_o( 7 DOWNTO 0 ), -- Recibe datos del gumnut, se debe sincronizar con el reloj
							port_dat_i( 7 DOWNTO 0 ), -- Envia datos a gumnut
							int_req,
							int_ack
						);

	btn		:	PROCESS(clk_i)
						BEGIN
							if rising_edge(clk_i) THEN
								IF port_cyc_o='1' and port_stb_o='1' and port_we_o = '0' THEN
									port_dat_i(0) <= KEY_IN(1);
								END IF;
							END IF;
					END PROCESS;
		
	disp7seg	:	PROCESS(clk_i)
						BEGIN
							if rising_edge(clk_i) THEN
								IF port_adr_o = "00000000" and port_cyc_o='1' and port_stb_o='1' and port_we_o = '1' THEN
									hex_out(7 downto 0) <= port_dat_o( 7 downto 0);
								END IF;
							END IF;
					END PROCESS;
	
	
	leds		:	PROCESS(clk_i)
						BEGIN
							if rising_edge(clk_i) THEN
								IF port_adr_o = x"00000001" and port_cyc_o='1' and port_stb_o='1' and port_we_o = '1' THEN
									LEDR(7 downto 0) <= port_dat_o( 7 downto 0);
								END IF;
							END IF;
					END PROCESS;
	
	
END behavior;